#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_es_latin_american.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;       // 0
    time-to-max-speed-ms = <0>;        // 300
    delay-ms = <0>;                    // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
};

&lt { tapping-term-ms = <300>; };

/ {
    behaviors {
        bt_encoder: bt_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;

            tap-ms = <20>;
        };

        hue_encoder: hue_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };

        sat_encoder: sat_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;
        };

        bright_encoder: bright_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <30>;
        };

        as_ht: autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            flavor = "tap-preferred";
        };

        cw_mod: caps_word {
            compatible = "zmk,behavior-caps-word";
            label = "Caps Word EXCLUSIONS";
            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            continue-list = <SPACE LCTRL RSHIFT LSHIFT COMMA SLASH LBRC RBRC APOS NUHS NUBS SEMI SINGLE_QUOTE FSLH LEFT RIGHT UP DOWN BSPC KP_N1 KP_N2 KP_N3 KP_N4 KP_N5 KP_N6 KP_N7 KP_N8 KP_N9 KP_N0 KP_SUBTRACT KP_DIVIDE KP_PLUS KP_ASTERISK HOME LBKT DEL>;
        };

        td_caps: td_caps {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&cw_mod>, <&kp CAPS>;

            label = "Enter / CapsWord / Mayusc.";
        };

        hrm: home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
        };

        shortcut: shortcut {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&oneshot>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
            label = "Oneshot shortcut";
        };

        lt_hold: lt_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "&mo(hold)";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            require-prior-idle-ms = <1>;
        };

        mt_hold: mt_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HOLD";
            bindings = <&kp>, <&td_caps>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
        };

        tilde_kp: tilde_kp {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&tilde>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
            label = "TILDE_KP";
        };

        kp_bt: kp_bt {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_BT";
            bindings = <&bt>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
        };
    };

    macros {
        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;

            label = "SHIFT";
        };

        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };

        oneshot: one_shot {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &rgb_ug RGB_TOG &rgb_ug RGB_EFF>,
                <&macro_wait_time 50>,
                <&rgb_ug RGB_EFR &rgb_ug RGB_TOG>,
                <&macro_release>;

            label = "one_shot";
        };

        tilde: tilde_a {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_tap>,
                <&kp ES_ACUTE>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "TILDE_A";
        };
    };

    combos {
        compatible = "zmk,combos";

        Toggle_Colemak {
            bindings = <&tog 2>;
            key-positions = <0 13>;
        };

        Toggle_Qwerty {
            bindings = <&tog 1>;
            key-positions = <12 27>;
        };

        BtCLR {
            bindings = <&bt BT_CLR>;
            key-positions = <31 32 33>;
            layers = <5>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <41 40>;
        };

        Del {
            bindings = <&kp DEL>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Alpha_Ctm {
            display-name = "ROCORN";
            bindings = <
&kp ESC                    &shortcut LC(Y) Y  &kp W              &shortcut LC(F) F  &kp P              &kp G                                        &kp UP                         &kp J                  &kp L                  &tilde_kp I I             &tilde_kp U U           &shortcut ES_AT Q  &kp BSPC
&shortcut LC(LA(TAB)) TAB  &kp H              &tilde_kp A A      &hrm LGUI R        &shortcut LC(T) T  &shortcut LC(V) V                  &kp LEFT  &shortcut END HOME  &kp RIGHT  &shortcut LG(LS(S)) S  &hrm LEFT_ALT N        &tilde_kp E E             &hrm RCTRL D            &tilde_kp O O      &shortcut KP_ASTERISK ES_ACUTE
&kp LALT                   &shortcut LC(Z) Z  &shortcut LC(X) X  &kp K              &shortcut LC(C) C  &kp B              &kp CAPSLOCK              &kp DOWN                       &kp ES_N_TILDE         &shortcut C_AL_MAIL M  &shortcut ES_LT ES_COMMA  &shortcut ES_GT ES_DOT  &kp ES_MINUS       &mo 4
                                                                 &kp LCTRL          &td_caps           &lt_hold 5 ENTER                                                            &lt 3 SPACE            &td_caps               &lt 5 DEL
            >;

            sensor-bindings = <&inc_dec_kp LS(RIGHT) LS(LEFT)>;
            label = "ROCORN";
        };

        QWERTY {
            display-name = "QWERTY";
            bindings = <
&trans  &shortcut ES_AT_SIGN Q  &kp W                  &tilde_kp E E      &kp R              &shortcut LC(T) T                            &kp UP                         &shortcut LC(Y) Y  &tilde_kp U U          &tilde_kp I I          &tilde_kp O O           &kp P           &trans
&trans  &tilde_kp A A           &shortcut LS(LG(S)) S  &hrm LGUI D        &shortcut LC(F) F  &kp G                              &kp LEFT  &shortcut END HOME  &kp RIGHT  &kp H              &hrm LEFT_ALT J        &hrm RGUI K            &hrm RCTRL L            &kp ES_N_TILDE  &trans
&trans  &shortcut LC(Z) Z       &shortcut LC(X) X      &shortcut LC(C) C  &shortcut LC(V) V  &kp B              &kp CAPSLOCK              &kp DOWN                       &kp N              &shortcut C_AL_MAIL M  &shortcut ES_LT COMMA  &shortcut ES_GT ES_DOT  &kp ES_MINUS    &trans
                                                       &trans             &trans             &trans                                                                      &trans             &trans                 &trans
            >;
        };

        Alpha_Alt {
            display-name = "COLEMAK";
            bindings = <
&trans  &shortcut ES_AT Q  &kp W                  &shortcut LC(F) F  &kp P              &kp G                             &kp UP                         &kp J   &kp L                  &kp U                     &shortcut LC(Y) Y       &kp ES_N_TILDE  &trans
&trans  &kp A              &shortcut LS(LG(S)) R  &hrm LGUI S        &kp T              &kp D                   &kp LEFT  &shortcut END HOME  &kp RIGHT  &kp H   &hrm LEFT_ALT N        &hrm RGUI E               &hrm RCTRL I            &kp O           &trans
&trans  &shortcut LC(Z) Z  &shortcut LC(X) X      &shortcut LC(C) C  &shortcut LC(V) V  &kp B   &kp CAPSLOCK              &kp DOWN                       &kp K   &shortcut C_AL_MAIL M  &shortcut ES_LT ES_COMMA  &shortcut ES_GT ES_DOT  &kp ES_MINUS    &trans
                                                  &trans             &trans             &trans                                                           &trans  &trans                 &trans
            >;
        };

        Symbol+Number {
            display-name = "SYM_NUM";
            bindings = <
&trans  &shortcut ES_IEXCL ES_EXCL  &shortcut ES_SQT ES_DQT     &kp ES_HASH                &kp ES_DLLR                &kp ES_PRCNT                                        &kp C_RW              &kp N7                       &kp N8                &kp N9                    &kp ES_MINUS              &kp ES_PLUS      &hrm DEL BACKSPACE
&trans  &kp ES_AMPS                 &shortcut ES_BSLH ES_SLASH  &shortcut ES_LBRC ES_LPAR  &shortcut ES_RBRC ES_RPAR  &kp ES_EQUAL                            &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp N4                       &kp N5                &kp N6                    &kp KP_DIVIDE             &kp KP_ASTERISK  &kp C_AL_CALC
&trans  &shortcut ES_DEG ES_PIPE    &shortcut ES_TILDE ES_NOT   &kp ES_LBKT                &kp ES_RBKT                &shortcut ES_IQMARK ES_QMARK  &trans                &kp C_FF              &kp N1                       &kp N2                &kp N3                    &shortcut ES_GT ES_COLON  &kp ES_DLLR      &shortcut ES_EQUAL KP_ENTER
                                                                &trans                     &trans                     &trans                                                                    &shortcut ES_EQUAL KP_ENTER  &shortcut ES_HASH N0  &shortcut ES_PERCENT DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Mouse {
            display-name = "MOUSE";
            bindings = <
&trans  &trans  &shortcut LC(HOME) HOME  &shortcut LC(UP) UP      &shortcut LC(END) END      &trans                         &trans            &trans          &trans          &trans          &trans           &trans  &trans
&trans  &trans  &shortcut LC(LEFT) LEFT  &shortcut LC(DOWN) DOWN  &shortcut LC(RIGHT) RIGHT  &trans               &mkp MB4  &trans  &mkp MB5  &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &trans  &trans
&trans  &trans  &trans                   &trans                   &trans                     &trans     &trans              &trans            &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
                                         &trans                   &trans                     &mkp RCLK                                        &mkp LCLK       &mkp MCLK       &trans
            >;

            sensor-bindings = <&inc_dec_kp K_VOL_UP K_VOL_DN>;
        };

        Fn {
            display-name = "Fn";
            bindings = <
&kp LALT     &shortcut LA(LC(F1)) F1  &shortcut LC(LA(F2)) F2  &shortcut LC(LA(F3)) F3  &shortcut LC(LA(F4)) F4  &kp F5                                             &rgb_ug RGB_BRI                   &kp F13     &kp F14  &kp F15  &kp F16  &kp F17  &kp PAUSE_BREAK
&trans       &kp_bt BT_SEL F6 0       &kp_bt BT_SEL F7 1       &kp_bt BT_SEL F8 2       &kp_bt BT_SEL F9 3       &kp_bt BT_SEL F10 4               &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &kp F18     &kp F19  &kp F20  &kp F21  &kp F22  &trans
&bootloader  &out OUT_USB             &out OUT_BLE             &none                    &kp F11                  &kp F12              &soft_off                     &rgb_ug RGB_BRD                   &kp F23     &kp F24  &none    &none    &none    &bootloader
                                                               &trans                   &trans                   &trans                                                                               &kp INSERT  &trans   &trans
            >;

            sensor-bindings = <&hue_encoder>;
        };

        Empty {
            display-name = "EMPTY";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

        };
    };

    //    underglow-layer {
    //        compatible = "zmk,underglow-layer";
    //
    //        Default {
    //            layer = <0>;
    //            effect = <3>;  // 3 es generalmente el efecto rainbow
    //        };
    //
    //        Number {
    //            layer = <2>;
    //            color = <RGB_COLOR_HSB(240, 100, 100)>;  // Azul
    //       };
    //
    //        Symbol {
    //            layer = <3>;
    //            color = <RGB_COLOR_HSB(270, 100, 100)>;  // Morado
    //        };
    //
    //        layer_3 {
    //            layer = <4>;
    //            color = <RGB_COLOR_HSB(0, 100, 100)>;    // Rojo
    //        };
    //
    //        caps_word {
    //            caps-word;
    //            color = <RGB_COLOR_HSB(30, 100, 100)>;   // Naranja
    //        };
    //    };
};
