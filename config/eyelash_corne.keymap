#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&lt 1 ESC  &kp Q  &kp W  &kp E             &kp R     &kp T                                &kp UP                &kp Y        &kp U     &kp I      &kp O    &kp P     &kp BSPC
&lt 2 TAB  &kp A  &kp S  &kp D             &kp F     &kp G                      &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J     &kp K      &kp L    &kp SEMI  &kp LBKT
&td0       &kp Z  &kp X  &kp C             &kp V     &kp B        &kp C_MUTE              &kp DOWN              &kp N        &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                         &mt LCTRL LS(N8)  &kp LGUI  &lt 3 SPACE                                                &lt 3 ENTER  &kp RALT  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp LS(LEFT) LS(RIGHT)>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3  &kp N4  &kp N5                                         &mmv MOVE_UP                     &kp KP_PLUS      &kp KP_N7        &kp KP_N8   &kp KP_N9  &kp KP_SUBTRACT  &kp BSPC
&trans  &kp N6           &kp N7          &kp N8  &kp N9  &kp N0                         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp KP_ASTERISK  &kp KP_N4        &kp KP_N5   &kp KP_N6  &kp KP_DIVIDE    &kp KP_NUMLOCK
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans  &trans  &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp KP_N0        &kp KP_N1        &kp KP_N2   &kp KP_N3  &kp KP_DOT       &kp KP_ENTER
                                         &trans  &trans  &trans                                                                          &kp KP_ENTER     &kp KP_NUMBER_0  &kp KP_DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp RPAR    &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                               &mmv MOVE_UP                     &kp CARET  &kp AMPS  &kp STAR   &kp LPAR   &kp UNDER     &kp EQUAL
&bt BT_NXT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PG_UP  &kp DLLR  &kp PRCNT  &kp CARET  &kp APOS      &kp NON_US_HASH
&trans      &out OUT_USB  &out OUT_BLE  &none         &none         &trans        &trans                    &mmv MOVE_DOWN                   &kp PG_DN  &kp EXCL  &kp AT     &kp HASH   &kp LS(APOS)  &kp LS(NON_US_HASH)
                                        &trans        &trans        &trans                                                                   &kp RET    &kp RPAR  &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F12      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                  &none                   &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&bt BT_NXT   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                &bt BT_PRV  &sys_reset  &bt BT_NXT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &trans
&bootloader  &out OUT_USB  &out OUT_BLE  &none         &none         &none         &sys_reset                &bt BT_CLR              &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                         &none         &none         &none                                                           &trans       &trans     &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
