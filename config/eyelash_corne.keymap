#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <100>;
    delay-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&under_glow {
    color-mapping = <0x000000 0x0000FF 0x800080 0xFF0000>; // default apagado, luego azul, morado, rojo
    effect = "rainbow_swirl";
};

/ {
    chosen {
        zmk,underglow = &under_glow;
    };

    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&cw_mod>;
        };

        bt_encoder: bt_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
            tap-ms = <30>;
        };

        cw_mod: caps_word_mod {
            compatible = "zmk,behavior-caps-word";
            label = "Caps Word EXCLUSIONS";
            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            continue-list = <SPACE LCTRL RSHIFT LSHIFT COMMA SLASH LBRC RBRC APOS NUHS NUBS SEMI SINGLE_QUOTE FSLH LEFT RIGHT UP DOWN BSPC KP_N1 KP_N2 KP_N3 KP_N4 KP_N5 KP_N6 KP_N7 KP_N8 KP_N9 KP_N0 KP_SUBTRACT KP_DIVIDE KP_PLUS KP_ASTERISK HOME LBKT DEL>;
        };

        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            flavor = "tap-preferred";
        };

        shortcut: shortcut {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&oneshot>, <&kp>;
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
        };

        hrm: home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;
        tap-ms = <100>;
    };

    // Macros y Keymap omitidos por brevedad. Puedes pegarlos aqu√≠ directamente.

    underglow_indicators {
        compatible = "zmk,rgb-underglow-indicators";
        label = "LAYER RGB";

        indicators = <&lower_rgb &raise_rgb &layer3_rgb>;

        lower_rgb: lower_layer {
            layer = <1>;
            color = <0 0 255>; // Azul
        };

        raise_rgb: raise_layer {
            layer = <2>;
            color = <128 0 128>; // Morado
        };

        layer3_rgb: layer_3 {
            layer = <3>;
            color = <255 0 0>; // Rojo
        };
    };
};
